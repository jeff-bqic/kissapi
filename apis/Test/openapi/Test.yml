openapi: 3.1.0
info: 
  title: Test API
  version: '1.0'
  license: 
    name: Copyright by jeff
    url: https://www.bitscon.biz
  contact: 
    name: Jeff
    email: jeff@bitscon.biz
  description: >
    some CommonMark
    description

servers: 
  - url: https://api.bitscon.biz/api/v1
  - url: https://test.api.bitscon.biz/api/v1

components: 

  securitySchemes: 
    BearerAuth: 
      bearerFormat: JWT
      scheme: bearer
      type: http
    apiKey: 
      in: header
      name: X-API-KEY
      type: apiKey
    appId: 
      in: cookie
      name: X-APP-ID
      type: apiKey
    basicAuth: 
      scheme: basic
      type: http
    bearerAuth2: 
      bearerFormat: UUID
      scheme: bearer
      type: http

  parameters: 
    sessionIdHeaderParam: 
      name: X-SESSION-ID
      description: the session ID
      in: header
      required: true
      schema: 
        type: string
        maxLength: 36
        pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
        format: uuid
    sessionId1HeaderParam: 
      name: sessionId1
      in: header
      required: true
      schema: 
        type: string
    sessionId2HeaderParam: 
      name: sessionId2
      in: header
      required: true
      schema: 
        $ref: '#/components/schemas/SessionId'
    accountIdPathParam: 
      name: accountId
      in: path
      required: true
      schema: 
        $ref: '#/components/schemas/AccountId'
    documentIdPathParam: 
      name: documentId
      in: path
      required: true
      schema: 
        $ref: '#/components/schemas/DocumentId'
    personIdPathParam: 
      name: personId
      in: path
      required: true
      schema: 
        $ref: '#/components/schemas/PersonId'
    transactionIdPathParam: 
      name: transactionId
      in: path
      required: true
      schema: 
        $ref: '#/components/schemas/TransactionId'
    userIdPathParam: 
      name: userId
      in: path
      required: true
      schema: 
        $ref: '#/components/schemas/UserId'
    accountTypeQueryParam: 
      name: accountType
      in: query
      required: true
      schema: 
        type: string
    documentIdQueryParam: 
      name: documentId
      in: query
      required: false
      schema: 
        type: string
    orderByQueryParam: 
      name: orderBy
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/OrderBy'
    paginationLastQueryParam: 
      name: paginationLast
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/PaginationLast'
    paginationLimitQueryParam: 
      name: paginationLimit
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/PaginationLimit'
    paginationPageQueryParam: 
      name: paginationPage
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/PaginationPage'
    paginationTotalQueryParam: 
      name: paginationTotal
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/PaginationTotal'
    searchForQueryParam: 
      name: searchFor
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/SearchFor'
    userIdQueryParam: 
      name: userId
      description: the user id
      in: query
      required: false
      schema: 
        $ref: '#/components/schemas/UserId'

  schemas: 
    AccountHolder: 
      title: AccountHolder
      description: a AccountHolder
      type: object
      properties: 
        firstName: 
          description: the account holder's first name
          example: 'Dagobert'
          type: string
          maxLength: 255
        lastName: 
          description: the account holder's last name
          example: 'Duck'
          type: string
          maxLength: 255
      required: 
        - firstName
        - lastName
    AccountId: 
      title: AccountId
      description: the unique ID of the accountId
      example: 'd5f34724-d3ec-4473-882c-5556d4b6ab80'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    AddressType: 
      title: AddressType
      description: the type of the address
      example: RESIDENTIAL
      type: string
      enum: [RESIDENTIAL,SHIPPING,BILLING]
    BIC: 
      title: BIC
      description: Business Identifier Code (ISO 9362)
      example: 'DEUTDEFFXXX'
      type: string
      minLength: 8
      maxLength: 11
      pattern: '^[A-Za-z]{4}[A-Za-z]{2}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$'
    BankAccount: 
      title: BankAccount
      description: a BankAccount
      type: object
      properties: 
        id: 
          description: the ID of the bank account
          example: 'cf7e7657-fcee-49b4-ab4c-ceb7862a69df'
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
        accountHolder: 
          $ref: '#/components/schemas/AccountHolder'
        bankName: 
          description: the bank's name
          example: 'Sand Bank'
          type: string
          maxLength: 50
      required: 
        - accountHolder
        - bankName
    CreateDocumentRequest: 
      title: CreateDocumentRequest
      description: create a new document
      type: object
      properties: 
        file: 
          $ref: '#/components/schemas/File'
        type: 
          $ref: '#/components/schemas/DocumentType'
      required: 
        - file
    CreateDocumentResponse: 
      title: CreateDocumentResponse
      description: create a new document
      type: object
      properties: 
        id: 
          $ref: '#/components/schemas/DocumentId'
        type: 
          $ref: '#/components/schemas/DocumentType'
      required: 
        - id
        - type
    Document: 
      title: Document
      description: a Document
      type: object
      properties: 
        type: 
          $ref: '#/components/schemas/DocumentType'
        file: 
          $ref: '#/components/schemas/File'
      required: 
        - type
        - file
    DocumentId: 
      title: DocumentId
      description: an UUID
      example: '27f0c1d5-b13c-48a2-9a8d-8ea859f2f65e'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    DocumentType: 
      title: DocumentType
      description: the type of a document
      example: 'CONTRACT'
      type: string
      minLength: 1
      maxLength: 50
    Documents: 
      title: Documents
      description: list of documents
      type: array
      minItems: 0
      maxItems: 500
      uniqueItems: true
      items: 
        $ref: '#/components/schemas/Document'
    Email: 
      title: Email
      description: an e-mail address
      example: 'hugo@hacker.com'
      type: string
      pattern: '^[A-Za-z0-9!#''$%&*+\/=?^_‘\{\|\}~-]+(?:\.[A-Za-z0-9!#''$%&*+\/=?^_‘{|}~-]+)*@(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?$'
    Error: 
      title: Error
      description: the error <with greater than>
      type: object
      properties: 
        domain: 
          description: the error domain
          example: 'AUTHENTICATION'
          type: string
          maxLength: 50
        name: 
          description: the name of the error
          example: 'WRONG_CREDENTIALS'
          type: string
          maxLength: 50
        code: 
          description: the error code
          example: '102892'
          type: string
          minLength: 6
          maxLength: 6
          pattern: '^\d{6}$'
        message: 
          description: the error message to be displayed
          example: 'wrong user credentials provided'
          type: string
          maxLength: 255
      required: 
        - domain
        - name
        - code
        - message
    File: 
      title: File
      description: a file
      example: asdsadsf
      type: string
      format: binary
    Gender: 
      title: Gender
      description: the gender of a person
      example: FEMALE
      type: string
      enum: [FEMALE,MALE,OTHER]
    GetDocumentsResponse: 
      title: GetDocumentsResponse
      description: documents
      type: object
      properties: 
        documents: 
          $ref: '#/components/schemas/Documents'
        pagination: 
          $ref: '#/components/schemas/Pagination'
      required: 
        - documents
        - pagination
    GetUserBarAccountBorTransactionsResponse: 
      title: GetUserBarAccountBorTransactionsResponse
      description: user bar account bor transactions
      type: object
      properties: 
        userBarAccountBorTransactions: 
          $ref: '#/components/schemas/UserBarAccountBorTransactions'
        pagination: 
          $ref: '#/components/schemas/Pagination'
      required: 
        - userBarAccountBorTransactions
        - pagination
    GetUserBarAccountsResponse: 
      title: GetUserBarAccountsResponse
      description: user bar accounts
      type: object
      properties: 
        userBarAccounts: 
          $ref: '#/components/schemas/UserBarAccounts'
      required: 
        - userBarAccounts
    GetUsersResponse: 
      title: GetUsersResponse
      description: users
      type: object
      properties: 
        users: 
          $ref: '#/components/schemas/Users'
        pagination: 
          $ref: '#/components/schemas/Pagination'
      required: 
        - users
        - pagination
    IBAN: 
      title: IBAN
      description: International Bank Account Number (ISO 13616-1:2007)
      example: 'DE75 5121 0800 1245 1261 99'
      type: string
      minLength: 16
      maxLength: 42
      pattern: '^([A-Za-z]{2}[ \-]?[0-9]{2})(?=(?:[ \-]?[A-Za-z0-9]){9,30}$)((?:[ \-]?[A-Za-z0-9]{3,5}){2,7})([ \-]?[A-Za-z0-9]{1,3})?$'
    JWT: 
      title: JWT
      description: a JSON Web Token
      example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdGVtcyI6WzAsMiw0XSwiaWF0IjoxNDkzMTM5NjU5LCJleHAiOjE0OTMxNDMyNTl9.932ZxtZzy1qhLXs932hd04J58Ihbg5_g_rIrj-Z16Js'
      type: string
      pattern: '^[A-Za-z0-9_-]+\.[A-Za-z0-9_-]+\.([A-Za-z0-9_-]+)?$'
    Language: 
      title: Language
      description: ISO 639-1 alpha2 language code
      example: 'EN'
      type: string
      minLength: 2
      maxLength: 2
    NonNegativeInt: 
      title: NonNegativeInt
      description: a natural number (integer greater or equal zero)
      example: 0
      type: integer
      format: int64
      minimum: 0
    OrderBy: 
      title: OrderBy
      description: >
        string with a comma separated list of sort criteria 
        composed of a name direction pair like "field:asc|desc"
        where "asc" is the default direction
      example: 'name:desc,created'
      type: string
      minLength: 255
      maxLength: 255
    Pagination: 
      title: Pagination
      description: a Pagination
      type: object
      properties: 
        page: 
          $ref: '#/components/schemas/PaginationPage'
        limit: 
          $ref: '#/components/schemas/PaginationLimit'
        last: 
          $ref: '#/components/schemas/PaginationLast'
        total: 
          $ref: '#/components/schemas/PaginationTotal'
      required: 
        - page
        - limit
        - last
        - total
    PaginationLast: 
      title: PaginationLast
      description: the last page of a pagination
      example: 13
      type: integer
      format: int64
    PaginationLimit: 
      title: PaginationLimit
      description: the maximum number of entries per page
      example: 20
      type: integer
      format: int64
    PaginationPage: 
      title: PaginationPage
      description: the current page of the pagination
      example: 4
      type: integer
      format: int64
    PaginationTotal: 
      title: PaginationTotal
      description: the total of entries of a pagination
      example: 1024
      type: integer
      format: int64
    Person: 
      title: Person
      description: a Person
      type: object
      properties: 
        salutation: 
          description: the person's salutation
          example: 'Ms'
          type: string
          maxLength: 20
        title: 
          description: the person's title
          example: 'Prof. Dr.'
          type: string
          maxLength: 50
        firstName: 
          description: the person's first name
          example: 'Hugo'
          type: string
          maxLength: 255
        middleName: 
          description: the person's middle name
          example: 'Balthazar'
          type: string
          maxLength: 255
        lastName: 
          description: the person's last name
          example: 'Hacker'
          type: string
          maxLength: 255
        gender: 
          $ref: '#/components/schemas/Gender'
        date_of_birth: 
          description: the person's date of birth
          example: 1970-01-01
          type: string
          format: date
        language: 
          $ref: '#/components/schemas/Language'
        email: 
          $ref: '#/components/schemas/Email'
        phone: 
          $ref: '#/components/schemas/PhoneNumber'
      required: 
        - salutation
        - title
        - firstName
        - middleName
        - lastName
        - gender
        - date_of_birth
        - language
        - email
        - phone
    PersonId: 
      title: PersonId
      description: an UUID
      example: '5ab5b5e7-8da9-4f1e-929c-effea6fe15f9'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    PhoneNumber: 
      title: PhoneNumber
      description: a phone number 
      example: '+49 345 - 974 5839'
      type: string
      minLength: 20
      maxLength: 20
      pattern: '^[\+]?[(]?[0-9]{0,4}[)]?[-\s\.]?[0-9-\s]+$'
    SearchFor: 
      title: SearchFor
      description: a comma separated list of search criteria
      example: 'name=B%,active=1'
      type: string
      minLength: 255
      maxLength: 255
    SessionId: 
      title: SessionId
      description: the unique ID of a session
      example: '487fb64d-2bfa-48cf-a021-3788ec4543e1'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    TransactionId: 
      title: TransactionId
      description: the unique ID of the transactionId
      example: '578d18d8-f798-4e95-b51d-88251f5d1328'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    UUID: 
      title: UUID
      description: an UUID
      example: 'cdb7915d-41cb-45b7-948e-b62205dff2f9'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    User: 
      title: User
      description: a User
      type: object
      properties: 
        id: 
          description: the user's ID
          example: 'cbbcb891-b0d8-42ab-b760-0bd6651179ad'
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
        person: 
          $ref: '#/components/schemas/Person'
        login: 
          description: the user's login
          example: 'hugo@hacker.com'
          type: string
          maxLength: 50
        active: 
          description: the active flag
          example: true
          type: boolean
        created: 
          description: the user's creation date and time
          example: 2021-01-01T00:00:01
          type: string
          format: date-time
        language: 
          $ref: '#/components/schemas/Language'
        passwordChange: 
          description: flag to indicate the necessity of a password change
          example: false
          type: boolean
        lastLogin: 
          description: timestamp of the last login
          example: 2021-12-12T23:59:59
          type: string
          format: date-time
        failedLogins: 
          $ref: '#/components/schemas/NonNegativeInt'
        groups: 
          description: a list of groups the user belongs to
          example: [ 'Group1', 'Group2' ]
          type: array
          maxItems: 10
          uniqueItems: true
          items: 
            type: string
        roles: 
          description: a list of the user's roles
          example: [ 'Admin', 'Sales' ]
          type: array
          maxItems: 10
          uniqueItems: true
          items: 
            type: string
      required: 
        - login
    UserBarAccount: 
      title: UserBarAccount
      description: a UserBarAccount
      type: object
      properties: 
        accountNo: 
          description: the account number
          example: '23452345234'
          type: string
          maxLength: 255
      required: 
        - accountNo
    UserBarAccountBorTransaction: 
      title: UserBarAccountBorTransaction
      description: a UserBarAccountBorTransaction
      type: object
      properties: 
        amount: 
          description: the transaction amount
          example: 23453.45143
          type: number
          format: double
      required: 
        - amount
    UserBarAccountBorTransactionId: 
      title: UserBarAccountBorTransactionId
      description: an UUID
      example: '24f3655a-eec8-448a-baf3-f0321140bea4'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    UserBarAccountBorTransactions: 
      title: UserBarAccountBorTransactions
      description: list of user bar account bor transactions
      type: array
      minItems: 0
      maxItems: 500
      items: 
        $ref: '#/components/schemas/UserBarAccountBorTransaction'
    UserBarAccountId: 
      title: UserBarAccountId
      description: an UUID
      example: '5e4b1328-1eba-41c9-8866-d6c26cde8ac6'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    UserBarAccounts: 
      title: UserBarAccounts
      description: list of user bar accounts
      type: array
      minItems: 0
      maxItems: 500
      items: 
        $ref: '#/components/schemas/UserBarAccount'
    UserId: 
      title: UserId
      description: the unique ID of the userId
      example: '37a2f3cb-17e4-4133-96ba-4ca5c9f7828d'
      type: string
      minLength: 36
      maxLength: 36
      format: uuid
      pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
    Users: 
      title: Users
      description: list of users
      type: array
      minItems: 0
      maxItems: 500
      items: 
        $ref: '#/components/schemas/User'

tags: 
  - name: documents
    description: >
      the multiline
      description of 
      the documents service
  - name: entities
    description: >
      the multiline
      description of 
      the entitiy service

paths: 
  '/document': 
    post: 
      tags: 
        - documents
      operationId: createDocument
      summary: create one document
      description: create a new document
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/CreateDocumentRequest'
      responses: 
        '200': 
          description: create a new document
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/CreateDocumentResponse'
        '201': 
          description: create a new document
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/CreateDocumentResponse'
        '202': 
          description: create a new document
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    put: 
      tags: 
        - documents
      operationId: updateOrCreateDocument
      summary: update or create one document
      description: update an existing document or create a new one
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Document'
      responses: 
        '200': 
          description: update an existing document or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/DocumentId'
        '201': 
          description: update an existing document or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/DocumentId'
        '202': 
          description: update an existing document or create a new one
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/documents': 
    get: 
      tags: 
        - documents
      operationId: getDocuments
      summary: get all documents
      description: retrieve a list of all documents
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/paginationPageQueryParam'
        - $ref: '#/components/parameters/paginationLimitQueryParam'
        - $ref: '#/components/parameters/paginationLastQueryParam'
        - $ref: '#/components/parameters/paginationTotalQueryParam'
        - $ref: '#/components/parameters/orderByQueryParam'
        - $ref: '#/components/parameters/searchForQueryParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
      responses: 
        '200': 
          description: retrieve a list of all documents
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/GetDocumentsResponse'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/documents/{documentId}': 
    get: 
      tags: 
        - documents
      operationId: getDocument
      summary: get one document
      description: get a certain document
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
        - $ref: '#/components/parameters/documentIdPathParam'
      responses: 
        '200': 
          description: get a certain document
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Document'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    patch: 
      tags: 
        - documents
      operationId: updateDocument
      summary: update one document
      description: update a certain document
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
        - $ref: '#/components/parameters/documentIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Document'
      responses: 
        '200': 
          description: update a certain document
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/DocumentId'
        '202': 
          description: update a certain document
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    delete: 
      tags: 
        - documents
      operationId: deleteDocument
      summary: delete one document
      description: delete a certain document
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/sessionId2HeaderParam'
        - $ref: '#/components/parameters/documentIdQueryParam'
        - $ref: '#/components/parameters/documentIdPathParam'
      responses: 
        '200': 
          description: delete a certain document
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/bla/blu/user': 
    post: 
      tags: 
        - entities
      operationId: createUser
      summary: create new user
      description: create a new user
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/User'
      responses: 
        '200': 
          description: create a new user
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserId'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    put: 
      tags: 
        - entities
      operationId: updateOrCreateUser
      summary: update or create one user
      description: update an existing user or create a new one
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/User'
      responses: 
        '200': 
          description: update an existing user or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserId'
        '201': 
          description: update an existing user or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserId'
        '202': 
          description: update an existing user or create a new one
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/bla/blu/users': 
    get: 
      tags: 
        - entities
      operationId: getUsers
      summary: list of users
      description: returns a list of users
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/paginationPageQueryParam'
        - $ref: '#/components/parameters/paginationLimitQueryParam'
        - $ref: '#/components/parameters/paginationLastQueryParam'
        - $ref: '#/components/parameters/paginationTotalQueryParam'
        - $ref: '#/components/parameters/searchForQueryParam'
        - $ref: '#/components/parameters/userIdQueryParam'
      responses: 
        '200': 
          description: returns a list of users
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/GetUsersResponse'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/bla/blu/users/{userId}': 
    get: 
      tags: 
        - entities
      operationId: getUser
      summary: get one user
      description: get a certain user
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      responses: 
        '200': 
          description: get a certain user
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/User'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    patch: 
      tags: 
        - entities
      operationId: updateUser
      summary: update one user
      description: update a certain user
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/User'
      responses: 
        '200': 
          description: update a certain user
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserId'
        '202': 
          description: update a certain user
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    delete: 
      tags: 
        - entities
      operationId: deleteUser
      summary: delete one user
      description: delete a certain user
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      responses: 
        '200': 
          description: delete a certain user
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/blubber/person/blo': 
    post: 
      tags: 
        - entities
      operationId: createPerson
      summary: create one person
      description: create a new person
      security: 
        - bearerAuth2: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionId1HeaderParam'
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Person'
      responses: 
        '200': 
          description: create a new person
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PersonId'
        '201': 
          description: create a new person
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PersonId'
        '202': 
          description: create a new person
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    put: 
      tags: 
        - entities
      operationId: updateOrCreatePerson
      summary: update or create one person
      description: update an existing person or create a new one
      security: 
        - bearerAuth2: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionId1HeaderParam'
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Person'
      responses: 
        '200': 
          description: update an existing person or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PersonId'
        '201': 
          description: update an existing person or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PersonId'
        '202': 
          description: update an existing person or create a new one
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/blubber/persons/{personId}/blo': 
    get: 
      tags: 
        - entities
      operationId: getPerson
      summary: get one person
      description: get a certain person
      security: 
        - bearerAuth2: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionId1HeaderParam'
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/personIdPathParam'
      responses: 
        '200': 
          description: get a certain person
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Person'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    patch: 
      tags: 
        - entities
      operationId: updatePerson
      summary: update one person
      description: update a certain person
      security: 
        - bearerAuth2: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionId1HeaderParam'
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/personIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Person'
      responses: 
        '200': 
          description: update a certain person
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/PersonId'
        '202': 
          description: update a certain person
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/account': 
    post: 
      tags: 
        - entities
      operationId: createUserBarAccount
      summary: create new account for a user
      description: multiline create
        new account
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccount'
      responses: 
        '200': 
          description: multiline create
            new account
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountId'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    put: 
      tags: 
        - entities
      operationId: updateOrCreateUserBarAccount
      summary: update or create one user bar account
      description: update an existing user bar account or create a new one
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccount'
      responses: 
        '200': 
          description: update an existing user bar account or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountId'
        '201': 
          description: update an existing user bar account or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountId'
        '202': 
          description: update an existing user bar account or create a new one
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/accounts': 
    get: 
      tags: 
        - entities
      operationId: getUserBarAccounts
      summary: list of all accounts of a user
      description: returns a list of a user's accounts
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
      responses: 
        '200': 
          description: returns a list of a user's accounts
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/GetUserBarAccountsResponse'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/accounts/{accountId}': 
    get: 
      tags: 
        - entities
      operationId: getUserBarAccount
      summary: get account for a user
      description: multiline get
        user account
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/accountTypeQueryParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      responses: 
        '200': 
          description: multiline get
            user account
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccount'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    patch: 
      tags: 
        - entities
      operationId: updateUserBarAccount
      summary: update one user bar account
      description: update a certain user bar account
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccount'
      responses: 
        '200': 
          description: update a certain user bar account
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountId'
        '202': 
          description: update a certain user bar account
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    delete: 
      tags: 
        - entities
      operationId: deleteUserBarAccount
      summary: delete one user bar account
      description: delete a certain user bar account
      security: 
        - basicAuth: []
        - apiKey: []
        - appId: []
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      responses: 
        '200': 
          description: delete a certain user bar account
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/accounts/{accountId}/bor/transaction': 
    post: 
      tags: 
        - entities
      operationId: createUserBarAccountBorTransaction
      summary: create one user bar account bor transaction
      description: create a new user bar account bor transaction
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccountBorTransaction'
      responses: 
        '200': 
          description: create a new user bar account bor transaction
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransactionId'
        '201': 
          description: create a new user bar account bor transaction
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransactionId'
        '202': 
          description: create a new user bar account bor transaction
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    put: 
      tags: 
        - entities
      operationId: updateOrCreateUserBarAccountBorTransaction
      summary: update or create one user bar account bor transaction
      description: update an existing user bar account bor transaction or create a new one
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccountBorTransaction'
      responses: 
        '200': 
          description: update an existing user bar account bor transaction or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransactionId'
        '201': 
          description: update an existing user bar account bor transaction or create a new one
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransactionId'
        '202': 
          description: update an existing user bar account bor transaction or create a new one
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/accounts/{accountId}/bor/transactions': 
    get: 
      tags: 
        - entities
      operationId: getUserBarAccountBorTransactions
      summary: get all user bar account bor transactions
      description: retrieve a list of all user bar account bor transactions
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/searchForQueryParam'
        - $ref: '#/components/parameters/orderByQueryParam'
        - $ref: '#/components/parameters/paginationPageQueryParam'
        - $ref: '#/components/parameters/paginationLimitQueryParam'
        - $ref: '#/components/parameters/paginationLastQueryParam'
        - $ref: '#/components/parameters/paginationTotalQueryParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
      responses: 
        '200': 
          description: retrieve a list of all user bar account bor transactions
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/GetUserBarAccountBorTransactionsResponse'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
  '/foo/users/{userId}/bar/accounts/{accountId}/bor/transactions/{transactionId}': 
    get: 
      tags: 
        - entities
      operationId: getUserBarAccountBorTransaction
      summary: get one user bar account bor transaction
      description: get a certain user bar account bor transaction
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
        - $ref: '#/components/parameters/transactionIdPathParam'
      responses: 
        '200': 
          description: get a certain user bar account bor transaction
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransaction'
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    patch: 
      tags: 
        - entities
      operationId: updateUserBarAccountBorTransaction
      summary: update one user bar account bor transaction
      description: update a certain user bar account bor transaction
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
        - $ref: '#/components/parameters/transactionIdPathParam'
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/UserBarAccountBorTransaction'
      responses: 
        '200': 
          description: update a certain user bar account bor transaction
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserBarAccountBorTransactionId'
        '202': 
          description: update a certain user bar account bor transaction
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '415': 
          description: Unsupporrted Media Type Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
    delete: 
      tags: 
        - entities
      operationId: deleteUserBarAccountBorTransaction
      summary: delete one user bar account bor transaction
      description: delete a certain user bar account bor transaction
      security: 
        - BearerAuth: []
      parameters: 
        - $ref: '#/components/parameters/sessionIdHeaderParam'
        - $ref: '#/components/parameters/userIdPathParam'
        - $ref: '#/components/parameters/accountIdPathParam'
        - $ref: '#/components/parameters/transactionIdPathParam'
      responses: 
        '200': 
          description: delete a certain user bar account bor transaction
        '400': 
          description: Bad Request Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '401': 
          description: Unauthorized Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '403': 
          description: Forbidden Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '404': 
          description: Not Found Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '406': 
          description: Not Acceptable Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '429': 
          description: Too Many Requests Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        '500': 
          description: Internal Server Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
        'default': 
          description: Unxepected Error
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
